"""
P√°gina de An√°lisis del Tejido Empresarial
Muestra la distribuci√≥n de empresas por tama√±o y ubicaci√≥n geogr√°fica.
"""

import streamlit as st
import sys
import os

# Agregar el directorio ra√≠z al path para importar m√≥dulos
sys.path.append(os.path.join(os.path.dirname(__file__), '..'))

from utils.loader import load_all_data
from utils.plotting import plot_barras_empresas_tama√±o, plot_barras_municipios

# Configuraci√≥n de la p√°gina
st.set_page_config(
    layout="wide", 
    page_title="Tejido Empresarial - Dashboard Casanare"
)

# --- CONTENIDO DE LA P√ÅGINA ---
st.header("üè¢ Tejido Empresarial de Casanare")
st.markdown("An√°lisis de la estructura empresarial del departamento por tama√±o y distribuci√≥n geogr√°fica.")

# Cargar datos
data = load_all_data()
df_empresarial = data.get('empresarial')
df_municipios = data.get('municipios')

if df_empresarial is not None and df_municipios is not None:
    # M√©tricas generales
    col1, col2, col3 = st.columns(3)
    
    with col1:
        total_empresas = df_empresarial['N√∫mero de Empresas'].sum()
        st.metric("Total Empresas", f"{total_empresas:,}")
    
    with col2:
        total_municipios = len(df_municipios)
        st.metric("Municipios Analizados", total_municipios)
    
    with col3:
        if not df_municipios.empty:
            municipio_principal = df_municipios.loc[df_municipios['N√∫mero de Empresas'].idxmax()]
            st.metric(
                "Municipio Principal", 
                municipio_principal['Municipio'],
                f"{municipio_principal['N√∫mero de Empresas']:,} empresas"
            )

    st.markdown("---")
    
    # An√°lisis por tama√±o de empresa
    col1, col2 = st.columns(2)

    with col1:
        st.subheader("Distribuci√≥n por Tama√±o de Empresa")
        
        fig_tama√±o = plot_barras_empresas_tama√±o(df_empresarial)
        st.plotly_chart(fig_tama√±o, use_container_width=True)
        
        # An√°lisis adicional del tama√±o
        if not df_empresarial.empty:
            st.caption("**An√°lisis por Tama√±o:**")
            for _, row in df_empresarial.iterrows():
                porcentaje = (row['N√∫mero de Empresas'] / total_empresas) * 100
                st.write(f"‚Ä¢ **{row['Tama√±o de Empresa']}**: {porcentaje:.1f}% del total")

    with col2:
        st.subheader("Distribuci√≥n por Municipio")
        
        fig_municipios = plot_barras_municipios(df_municipios)
        st.plotly_chart(fig_municipios, use_container_width=True)
        
        # Top 3 municipios
        if not df_municipios.empty:
            st.caption("**Top 3 Municipios:**")
            top_municipios = df_municipios.nlargest(3, 'N√∫mero de Empresas')
            for i, (_, row) in enumerate(top_municipios.iterrows(), 1):
                st.write(f"{i}. **{row['Municipio']}**: {row['N√∫mero de Empresas']:,} empresas")

    # Datos detallados
    st.markdown("---")
    st.subheader("Datos Detallados")
    
    tab1, tab2 = st.tabs(["üìä Por Tama√±o", "üè¢ Por Municipio"])
    
    with tab1:
        st.dataframe(
            df_empresarial,
            use_container_width=True,
            hide_index=True
        )
    
    with tab2:
        st.dataframe(
            df_municipios,
            use_container_width=True,
            hide_index=True
        )

else:
    st.error("No se pudieron cargar los datos del tejido empresarial.")
    st.info("""
    üí° **Tip**: Verifica que los siguientes archivos est√©n disponibles:
    - 'Indicadores generalidades - Empresarial.csv'
    - 'Indicadores generalidades - Numero de empresas por municipio.csv'
    """)

# --- INFORMACI√ìN ADICIONAL ---
st.markdown("---")
st.info("""
**üè¢ Clasificaci√≥n por Tama√±o de Empresa:**

- **Microempresas**: 1-10 empleados
- **Peque√±as**: 11-50 empleados  
- **Medianas**: 51-200 empleados
- **Grandes**: M√°s de 200 empleados

El tejido empresarial es fundamental para el desarrollo econ√≥mico local y la generaci√≥n de empleo en el departamento.
""")
